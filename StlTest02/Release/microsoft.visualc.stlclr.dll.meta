Assembly Microsoft.VisualC.STLCLR, Version=1.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a: 
	hash=SHA1, flags=PublicKey
Assembly mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Assembly System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089: 
	hash=SHA1, flags=None
Interface Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Methods:
    get_generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Methods:
    valid_bias(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    at_bias(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.INode`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Properties:
    TValue& _Value 'get set' : 
  Methods:
    get__Value(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set__Value(TValue&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    is_head(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    next_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    prev_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    System.ICloneable
  Methods:
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
  Methods:
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
  Methods:
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
Interface Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    move(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    distance(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    less_than(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    op_Assign(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    base(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_MemberSelection(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ReverseBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ReverseBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ReverseBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ReverseBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    op_Assign(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    base(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_MemberSelection(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ConstReverseBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ConstReverseBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ConstReverseBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstReverseBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstReverseBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Properties:
    TValue Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, TValue): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    base(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    move(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    less_than(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    less_than(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    op_MemberSelection(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ReverseRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ReverseRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ReverseRandomAccessIterator`1&, Int32, ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_LessThanOrEqual(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Properties:
    TValue& Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    base(): PrivateScope, Public, HideBySig
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    move(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    less_than(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    less_than(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    op_MemberSelection(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ConstReverseRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ConstReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstReverseRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ConstReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ConstReverseRandomAccessIterator`1&, Int32, ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ConstReverseRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_LessThanOrEqual(ConstReverseRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    op_Assign(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_MemberSelection(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ContainerBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ContainerBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ContainerBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ContainerBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Methods:
    op_Assign(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    op_MemberSelection(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ConstContainerBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ConstContainerBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ConstContainerBidirectionalIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstContainerBidirectionalIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstContainerBidirectionalIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Properties:
    TValue Item [Int32] 'get set' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    set_Item(Int32, TValue): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    move(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    less_than(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    less_than(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    op_MemberSelection(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ContainerRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ContainerRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ContainerRandomAccessIterator`1&, Int32, ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(IRandomAccessIterator`1, ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_LessThanOrEqual(IRandomAccessIterator`1, ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
Class Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IForwardIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IInputIterator`1[TValue]
    Microsoft.VisualC.StlClr.Generic.IBaseIterator`1[TValue]
    System.ICloneable
    Microsoft.VisualC.StlClr.Generic.IOutputIterator`1[TValue]
  Properties:
    TValue& Item [Int32] 'get ' : 
  Methods:
    get_Item(Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Assign(ContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Implicit(): PrivateScope, Public, HideBySig, SpecialName
    Clone(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_node(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    valid(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    next(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    equal_to(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    get_cref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    get_ref(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    prev(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    move(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    distance(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    less_than(IRandomAccessIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    less_than(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    op_MemberSelection(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_PointerDereference(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Increment(ConstContainerRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Increment(ConstContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Equality(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(IInputIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_Inequality(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstContainerRandomAccessIterator`1&): PrivateScope, Public, HideBySig, SpecialName
    op_Decrement(ConstContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ConstContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Addition(ConstContainerRandomAccessIterator`1&, Int32, ConstContainerRandomAccessIterator`1 IsByValue): PrivateScope, Public, Static, HideBySig, SpecialName
    op_Subtraction(ConstContainerRandomAccessIterator`1&, Int32): PrivateScope, Public, HideBySig, SpecialName
    op_Subtraction(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_LessThan(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(IRandomAccessIterator`1): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThanOrEqual(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_GreaterThan(IRandomAccessIterator`1, ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_GreaterThan(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    op_LessThanOrEqual(IRandomAccessIterator`1, ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, Static, HideBySig, SpecialName
    op_LessThanOrEqual(ConstContainerRandomAccessIterator`1 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
Interface Microsoft.VisualC.StlClr.IDeque`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1[TValue]
    System.ICloneable
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    TValue Item [Int32] 'get set' : 
    TValue back_item 'get set' : 
    TValue front_item 'get set' : 
  Methods:
    get_front_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_front_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_back_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_back_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    at(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin(ContainerRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end(ContainerRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rbegin(ReverseRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rend(ReverseRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push_front(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop_front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push_back(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop_back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue, ContainerRandomAccessIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    swap(IDeque`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end_bias(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.DequeEnumeratorBase`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(Microsoft.VisualC.StlClr.IDeque`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.VisualC.StlClr.DequeEnumerator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
  :Microsoft.VisualC.StlClr.DequeEnumeratorBase`1[TValue]
    Void .ctor(Microsoft.VisualC.StlClr.IDeque`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
  Properties:
    TValue Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Class Microsoft.VisualC.StlClr.UnaryDelegate`2[TArg,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: TArg
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(TArg): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(TArg, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Class Microsoft.VisualC.StlClr.BinaryDelegate`3[TArg1,TArg2,TResult]: AutoLayout, AnsiClass, Class, Public, Sealed, BeforeFieldInit
  Type parameter: TArg1
  Type parameter: TArg2
  Type parameter: TResult
  :System.MulticastDelegate
    Void .ctor(System.Object, IntPtr): PrivateScope, Public, SpecialName, RTSpecialName
  Methods:
    Invoke(TArg1, TArg2): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    BeginInvoke(TArg1, TArg2, AsyncCallback, Object): PrivateScope, Public, Final, Virtual, VtableLayoutMask
    EndInvoke(IAsyncResult): PrivateScope, Public, Final, Virtual, VtableLayoutMask
Interface Microsoft.VisualC.StlClr.IList`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1[TValue]
    System.ICloneable
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    TValue back_item 'get set' : 
    TValue front_item 'get set' : 
  Methods:
    get_front_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_front_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_back_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_back_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rbegin(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rend(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push_front(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop_front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push_back(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop_back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1 IsByValue, Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1 IsByValue, IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1 IsByValue, IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    swap(IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    splice(ContainerBidirectionalIterator`1 IsByValue, IList`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    splice(ContainerBidirectionalIterator`1 IsByValue, IList`1, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    splice(ContainerBidirectionalIterator`1 IsByValue, IList`1, ContainerBidirectionalIterator`1 IsByValue, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    remove(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    remove_if(UnaryDelegate`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    unique(BinaryDelegate`3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    merge(IList`1, BinaryDelegate`3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    sort(BinaryDelegate`3): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    reverse(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.ListEnumeratorBase`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.VisualC.StlClr.ListEnumerator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
  :Microsoft.VisualC.StlClr.ListEnumeratorBase`1[TValue]
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
  Properties:
    TValue Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface Microsoft.VisualC.StlClr.IQueue`2[TValue,TCont]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Type parameter: TCont
  Interfaces:
    System.ICloneable
  Methods:
    front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IQueue`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.IPriorityQueue`2[TValue,TCont]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Type parameter: TCont
  Interfaces:
    System.ICloneable
  Properties:
    TValue top_item 'get set' : 
  Methods:
    get_top_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_top_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    value_comp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IPriorityQueue`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Interface Microsoft.VisualC.StlClr.IStack`2[TValue,TCont]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Type parameter: TCont
  Interfaces:
    System.ICloneable
  Properties:
    TValue top_item 'get set' : 
  Methods:
    get_top_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_top_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    top(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_container(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IStack`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.GenericPair`2[TValue1,TValue2]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue1
  Type parameter: TValue2
    Void .ctor(): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(Microsoft.VisualC.StlClr.GenericPair`2[TValue1,TValue2]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(System.Collections.Generic.KeyValuePair`2[TValue1,TValue2] ByRef): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TValue1): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
    Void .ctor(TValue1, TValue2): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Fields:
    TValue1 first : Public
    TValue2 second : Public
  Methods:
    op_Assign(GenericPair`2 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig, SpecialName
    swap(GenericPair`2 IsImplicitlyDereferenced): PrivateScope, Public, HideBySig
    Equals(Object): PrivateScope, Public, Virtual, HideBySig
Interface Microsoft.VisualC.StlClr.IVector`1[TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1[TValue]
    System.ICloneable
    System.Collections.ICollection
    System.Collections.IEnumerable
  Properties:
    TValue Item [Int32] 'get set' : 
    TValue back_item 'get set' : 
    TValue front_item 'get set' : 
  Methods:
    get_front_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_front_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_back_item(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_back_item(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    get_Item(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    set_Item(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract, SpecialName
    at(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    front(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin(ContainerRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end(ContainerRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rbegin(ReverseRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rend(ReverseRandomAccessIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    reserve(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    capacity(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    resize(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    push_back(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    pop_back(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    assign(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, Int32, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerRandomAccessIterator`1 IsByValue, IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerRandomAccessIterator`1&, ContainerRandomAccessIterator`1 IsByValue, ContainerRandomAccessIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    swap(IVector`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    get_generation(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.VectorEnumeratorBase`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
    Void .ctor(Microsoft.VisualC.StlClr.IVector`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.VisualC.StlClr.VectorEnumerator`1[TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TValue
  :Microsoft.VisualC.StlClr.VectorEnumeratorBase`1[TValue]
    Void .ctor(Microsoft.VisualC.StlClr.IVector`1[TValue], Int32): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
  Properties:
    TValue Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface Microsoft.VisualC.StlClr.IHash`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1[TValue]
    System.ICloneable
    System.Collections.ICollection
    System.Collections.IEnumerable
  Methods:
    key_comp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    value_comp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rbegin(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rend(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    hash_delegate(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    bucket_count(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    load_factor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    max_load_factor(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    max_load_factor(Single): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rehash(Int32): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(GenericPair`2&, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(IEnumerable): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    swap(IHash`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    find(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    count(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    lower_bound(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    upper_bound(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    equal_range(GenericPair`2&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.HashEnumeratorBase`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.VisualC.StlClr.HashEnumerator`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :Microsoft.VisualC.StlClr.HashEnumeratorBase`2[TKey,TValue]
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
  Properties:
    TValue Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
Interface Microsoft.VisualC.StlClr.ITree`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, ClassSemanticsMask, Abstract, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  Interfaces:
    Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1[TValue]
    System.ICloneable
    System.Collections.ICollection
    System.Collections.IEnumerable
  Methods:
    key_comp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    value_comp(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    begin(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    end(ContainerBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rbegin(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    rend(ReverseBidirectionalIterator`1&): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    size(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    empty(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(GenericPair`2&, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(IInputIterator`1, IInputIterator`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    insert(IEnumerable`1): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(ContainerBidirectionalIterator`1&, ContainerBidirectionalIterator`1 IsByValue, ContainerBidirectionalIterator`1 IsByValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    erase(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    clear(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    swap(ITree`2): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    find(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    count(TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    lower_bound(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    upper_bound(ContainerBidirectionalIterator`1&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
    equal_range(GenericPair`2&, TKey): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, Abstract
Class Microsoft.VisualC.StlClr.TreeEnumeratorBase`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.IEnumerator
  Properties:
    System.Object Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(Object): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
    Reset(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask
Class Microsoft.VisualC.StlClr.TreeEnumerator`2[TKey,TValue]: AutoLayout, AnsiClass, Class, Public, BeforeFieldInit
  Type parameter: TKey
  Type parameter: TValue
  :Microsoft.VisualC.StlClr.TreeEnumeratorBase`2[TKey,TValue]
    Void .ctor(Microsoft.VisualC.StlClr.Generic.INode`1[TValue]): PrivateScope, Public, HideBySig, SpecialName, RTSpecialName
  Interfaces:
    System.Collections.Generic.IEnumerator`1[TValue]
    System.IDisposable
  Properties:
    TValue Current 'get set' : 
  Methods:
    get_Current(): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    set_Current(TValue): PrivateScope, Public, Virtual, HideBySig, VtableLayoutMask, SpecialName
    MoveNext(): PrivateScope, Public, Virtual, HideBySig
    Reset(): PrivateScope, Public, Virtual, HideBySig
    Dispose(): PrivateScope, Public, Final, Virtual, HideBySig
